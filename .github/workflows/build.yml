name: build

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ARCADE_HEADLESS: True

    strategy:
      matrix:
        python-version: [3.12]

    steps:

    - name: Checkout the repo
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies for Pillow
      run: sudo apt-get update && sudo apt-get install -y libjpeg-dev zlib1g-dev

    - name: Install poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root

    - name: Install library
      run: poetry install --no-interaction --no-root

    - name: Install Mesa libs
      run: |
        sudo apt-get update -y -qq
        sudo apt-get install -y -qq libgl1-mesa-dev libegl-dev

    - name: Check if EGL library exists
      run: ldconfig -p | grep EGL

    - name: Test with pytest
      run: |
        source .venv/bin/activate
        pytest --cov-report html --cov=src/ tests/
        rm htmlcov/.gitignore
